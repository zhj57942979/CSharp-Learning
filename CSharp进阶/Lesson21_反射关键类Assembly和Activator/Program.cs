using System;

namespace Lesson21_反射关键类Assembly和Activator
{
    class Program
    {
        #region 知识点回顾
        //编译器是一种翻译程序
        //它用于将源语言程序翻译为目标语言程序

        //源语言程序: 某种程序设计语言写成的 比如C C# C++ Java等语言写的程序
        //目标语言程序 二进制表示的伪机器代码写的程序
        #endregion

        #region 知识点一 什么是程序集
        //程序集是经由编译器编译得到的 供进一步编译执行的那个中间产物
        //在WINDOWS系统中 它一般表现为后缀为.dll(库文件)或者是.exe(可执行文件)的格式

        //说人话
        //程序集就是我们写的一个代码集合 我们现在写的所以代码
        //最终都会被编译器翻译为一个程序集供别人使用
        //比如一个代码库文件(dll)或者一个可执行文件(exe)
        #endregion

        #region 知识点二 元数据
        //元数据就是用来描述数据的数据
        //这个概念不仅仅用于程序上 在别的领域也有元数据

        //说人话
        //程序中的类 类中的函数 变量等等信息就是 程序的 元数据
        //有关程序以及类型的数据被称为 元数据 他们保存在程序集中
        #endregion

        #region 知识点三 反射的概念
        //程序正在进行时 可以查看其他程序集或者自身的元数据
        //一个运行的程序查看本身或者其他程序的元数据的行为就叫做反射

        //说人话
        //在程序运行时 通过反射可以得到其他程序集或者自己程序集代码的各种信息
        //类 函数 变量 对象、等等 实例化它们 执行它们 操作它们
        #endregion

        #region 知识点四 反射的作用
        //因为反射可以在程序编译后获得信息 所以它提高了程序的拓展性和灵活性
        //1 程序运行时得到所有元数据 包括元数据的特性
        //2 程序运行时 实例化对象 操作对象
        //3 程序运行时 创建新对象 用这些对象执行人物
        #endregion

        static void Main(string[] args)
        {
            Console.WriteLine("反射关键类Assembly和Activator");


        }
    }
}
